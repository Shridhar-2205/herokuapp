<!DOCTYPE html>
<html>
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8">
  <meta name="viewport" content="initial-scale=1, maximum-scale=1,user-scalable=no">

  <link rel="stylesheet" href="https://js.arcgis.com/3.26/dijit/themes/claro/claro.css">
  <link rel="stylesheet" href="https://js.arcgis.com/3.26/esri/css/esri.css">
<!-- Favicon -->
<link href="img/brand/favicon.png" rel="icon" type="image/png">
<!-- Fonts -->
<link href="https://fonts.googleapis.com/css?family=Open+Sans:300,400,600,700" rel="stylesheet">
<!-- Icons -->
<link href="vendor/nucleo/css/nucleo.css" rel="stylesheet">
<link href="vendor/@fortawesome/fontawesome-free/css/all.min.css" rel="stylesheet">
<!-- Argon CSS -->
<link type="text/css" href="css/argon.css?v=1.0.0" rel="stylesheet">

<style>
    html, body {
      height: 100%;
      padding: 0;
      margin: 0;
    }
    #map{
      height: 80%;
      width: 70%;
      padding: 0;
      margin: 0;
    }
    #leftPane{
      width: 20%;
    }
    #layerListPane{
    width:0px;
    }
    .esriLayerList .esriList{
        border-top:none;
    }
    .esriLayerList .esriTitle {
      background-color: #fff;
      border-bottom:none;
    }
    .esriLayerList .esriList ul{
      background-color: #fff;
    }
</style>

<script src="https://js.arcgis.com/3.26/"></script>

<!-- <script>
  require(["esri/map","esri/arcgis/utils", "dojo/domReady!"], 
  function(Map, arcgisUtils) {
    map = new Map("map", {
      basemap : "hybrid",
      center : [-122.45, 37.75],
      zoom : 13
    })
  });
</script> -->
<script>var dojoConfig = { parseOnLoad: true };</script>
<script>
  var map, tb;
  
  var ROAD_BUFFER_LENGTH=0, ROAD_BUFFER_AREA=0, FOREST_AREA_SQ_KM=0, INTERSECT_AREA=0;
  var MAP_IMG_URL;

  var app = {};
  app.printer = null;
  
  require([          
          "dojo/dom",
          "dojo/dom-construct",
          "dojo/_base/array",
          "dojo/parser",
          "dojo/query",
          "dojo/on",
  
          "esri/Color",
          "esri/config",
          "esri/map",
          "esri/graphic",
    
          "esri/toolbars/draw",
          "esri/dijit/Print",
    
          "esri/symbols/SimpleMarkerSymbol",
          "esri/symbols/SimpleLineSymbol",
          "esri/symbols/SimpleFillSymbol",
          
          "esri/arcgis/utils",
          "esri/dijit/LayerList",
          "esri/layers/FeatureLayer",
          
          "esri/geometry/geometryEngine", 
          "esri/geometry/normalizeUtils",         
          "esri/geometry/webMercatorUtils",
          "esri/geometry/Point",

          "esri/tasks/PrintTemplate",
          "esri/config",

          "dijit/layout/BorderContainer",
          "dijit/layout/ContentPane",
          "dijit/form/Button", 
          "dojo/domReady!"
          ],
        function(dom, dom_construct, array, parser, query, on,
                 Color, esriConfig, Map, Graphic,  
                 Draw, Print,
                 SimpleMarkerSymbol, SimpleLineSymbol, SimpleFillSymbol,
                 arcgisUtils, LayerList, FeatureLayer, 
                 geometryEngine, normalizeUtils, webMercatorUtils, Point,
                 PrintTemplate){
  
          parser.parse();
          esriConfig.defaults.io.proxyUrl = "/proxy/";
  
         //Setup button click handlers
          on(dom.byId("clearGraphics"), "click", function(){
            if(map){
              map.graphics.clear();
            }
          });

          // -------- check
          on(dom.byId("check"), "click", function(){
            console.log(ForestLayer.geometryProperties);
            //get total forest area
            dom.byId("forestArea").innerHTML = geometryEngine.planarArea(ForestLayer.graphics[0].geometry, "square-kilometers");
          })

          //click handler for the draw tool buttons
          query(".tool").on("click", function(evt){
            if(tb){
             tb.activate(evt.target.id);
            }
          });

          //-------------------------create map
          map = new Map("map", {
            basemap: "satellite",
            center: [-120.652, 43.646],
            zoom: 7
          });
          var ForestLayer = new FeatureLayer("https://services9.arcgis.com/1Y7xLGjga1P93hYo/ArcGIS/rest/services/forestland/FeatureServer/0");
          map.addLayer(ForestLayer);
          
          var HighwayLayer = new FeatureLayer("https://services9.arcgis.com/1Y7xLGjga1P93hYo/arcgis/rest/services/tl_2014_41_prisecroads/FeatureServer/0");
          map.addLayer(HighwayLayer);
          console.log("forest Layer: ");
          console.log(ForestLayer);
                    
          map.on("load", initToolbar);
       
        //-------------------------Buffer
        function initToolbar(evtObj) {
          tb = new Draw(evtObj.map);
          tb.on("draw-end", doBuffer);
        }
  
        function doBuffer(evtObj) {
          tb.deactivate();
          var geometry = evtObj.geometry  // geometry to buffer
          var symbol;
          
          switch (geometry.type) {  
             case "point":
               symbol = new SimpleMarkerSymbol(SimpleMarkerSymbol.STYLE_SQUARE, 10, new SimpleLineSymbol(SimpleLineSymbol.STYLE_SOLID, new Color([255,0,0]), 1), new Color([0,255,0,0.25]));
               break;
             case "polyline":
               symbol = new SimpleLineSymbol(SimpleLineSymbol.STYLE_DASH, new Color([255,0,0]), 1);
               break;
             case "polygon":
               symbol = new SimpleFillSymbol(SimpleFillSymbol.STYLE_NONE, new SimpleLineSymbol(SimpleLineSymbol.STYLE_DASHDOT, new Color([255,0,0]), 2), new Color([255,255,0,0.25]));
               break;
          };
  
          //setup the buffer parameters
          var graphic = new Graphic(geometry, symbol); //set geometry graphic
          map.graphics.add(graphic);

          var buffer_distance = [ dom.byId("distance").value ];
          var buffer_unit = dom.byId("unit").value; 
          var buffer_symbol = new SimpleFillSymbol(
                SimpleFillSymbol.STYLE_SOLID,
                new SimpleLineSymbol(
                  SimpleLineSymbol.STYLE_SOLID,
                  new Color([255,0,0,0.65]), 2
                ),
                new Color([255,0,0,0.35])
              );
              var buffSymFade = new SimpleFillSymbol(
                  SimpleFillSymbol.STYLE_SOLID, 
                  new SimpleLineSymbol(
                      SimpleLineSymbol.STYLE_SOLID, 
                      new Color([255, 255, 255, 0.4]), 10), null);

          //geodesicBuffer
          var geoBuffer = new geometryEngine.buffer(geometry, buffer_distance, buffer_unit);
          map.graphics.add(new Graphic(geoBuffer, buffer_symbol));
          
          //buffer calculations       
          var bufferAreaUnit = dom.byId("area-unit").value;
          var bufferLengthUnit = dom.byId("unit").value;
          ROAD_BUFFER_LENGTH = geometryEngine.planarLength(geoBuffer, bufferLengthUnit);
          ROAD_BUFFER_AREA = geometryEngine.planarArea(geoBuffer, bufferAreaUnit);
          FOREST_AREA_SQ_KM = geometryEngine.planarArea(ForestLayer.graphics[0].geometry, "square-kilometers");
          dom.byId("bufferArea").innerHTML = ROAD_BUFFER_AREA + " "+bufferAreaUnit;
          dom.byId("bufferLength").innerHTML = ROAD_BUFFER_LENGTH + " "+bufferLengthUnit;

          ROAD_BUFFER_LENGTH = geometryEngine.planarLength(geoBuffer, "kilometers");
          ROAD_BUFFER_AREA = geometryEngine.planarArea(geoBuffer, "square-kilometers");
          //Intersect
          var forestLayerGeometry = ForestLayer.graphics[0].geometry;
          
          if(geometryEngine.intersects(geoBuffer, forestLayerGeometry)){
              var intersectGeometry = geometryEngine.intersect(geoBuffer, forestLayerGeometry);
              map.graphics.add(new Graphic(intersectGeometry, buffSymFade));
              console.log(intersectGeometry);
              INTERSECT_AREA = geometryEngine.planarArea(intersectGeometry, bufferAreaUnit);

              dom.byId("resultArea").innerHTML = INTERSECT_AREA + " "+bufferAreaUnit;
              INTERSECT_AREA = geometryEngine.planarArea(intersectGeometry, "square-kilometers");
          }
          else{
              dom.byId("resultArea").innerHTML = 0;
          }
    
    
        }//doBuffer ends
          
          // perform buffer related operations here, as buffer now created
          function showBuffer(bufferedGeometries) {
            var symbol = new SimpleFillSymbol(
              SimpleFillSymbol.STYLE_SOLID,
              new SimpleLineSymbol(
                SimpleLineSymbol.STYLE_SOLID,
                new Color([255,0,0,0.65]), 2
              ),
              new Color([255,0,0,0.35])
            );
  
            array.forEach(bufferedGeometries, function(geometry) {
              console.log(bufferedGeometries);
              var graphic = new Graphic(geometry, symbol);
              map.graphics.add(graphic);

            });
          }

         
          //-------------------------show coordinates
          map.on("load", function() {
            //after map loads, connect to listen to mouse move & drag events
            map.on("mouse-move", showCoordinates);
            map.on("mouse-drag", showCoordinates);

            function showCoordinates(evt) {
              //the map is in web mercator but display coordinates in geographic (lat, long)
              var mp = webMercatorUtils.webMercatorToGeographic(evt.mapPoint);
              //display mouse coordinates
              dom.byId("info").innerHTML = mp.x.toFixed(3) + ", " + mp.y.toFixed(3);
            }
          });

        //------ Input Long, Lat from user and display point
        var symbol = new SimpleMarkerSymbol(  
                SimpleMarkerSymbol.STYLE_CIRCLE,  
                15,  
                new SimpleLineSymbol(  
                    SimpleLineSymbol.STYLE_SOLID,  
                    new Color([0, 0, 255, 0.5]),  
                    8  
                    ),  
                new Color([0, 0, 255])  
             );  
      
        on(dom.byId("go"), "click", coordinates);  

        function coordinates() {  
          console.log("got here")  
            var lat = document.getElementById("sel_lat").value  
            var long1 = document.getElementById("sel_long").value  
            var mp = new Point(long1, lat);  
            var graphic = new Graphic(mp, symbol);  
            map.graphics.add(graphic);  
        }  
        
        //------------------------- Print Map
        app.printer = new Print({
          map: map,
          url: "https://utility.arcgisonline.com/arcgis/rest/services/Utilities/PrintingTools/GPServer/Export%20Web%20Map%20Task"
        }, dom.byId("check"));
        app.printer.startup();
        app.printer.hide();

        on(dom.byId("report_btn"), "click", function(){
          dom.byId("report_btn").innerHTML = "generating report...";
          var printTemplate = new PrintTemplate();
          printTemplate.layout = "Letter ANSI A Landscape" ;
          printTemplate.label = "Landscape (Image)";
          printTemplate.format = "jpg";
          printTemplate.layoutOptions = {
                                        legendLayers: [],
                                        scalebarUnit: "Miles",
                                        titleText: "Proposed Road map",
                                        };

          printTemplate.exportOptions = {
            width: 500,
            height: 400,
            dpi: 96
          };
          console.log(printTemplate);
          app.printer.printMap(printTemplate);
        });

        app.printer.on('print-complete', function(evt){
          MAP_IMG_URL = evt.result.url;
          console.log(evt.result.url);
          dom.byId("report_btn").innerHTML = "Generate Report";
          generate();
        });

        //----------------------------GENERATE Report
        function generate(){ //---
          //--
          dom.byId("FRAREA").value = FOREST_AREA_SQ_KM;
          dom.byId("BFAREA").value = ROAD_BUFFER_AREA;
          dom.byId("BFLENGTH").value = ROAD_BUFFER_LENGTH;
          dom.byId("RSAREA").value = INTERSECT_AREA;
          var percent_of_deforest = (INTERSECT_AREA/FOREST_AREA_SQ_KM)*100;
          percent_of_deforest = percent_of_deforest.toFixed(2);
          dom.byId("CHECKPERCENTAGE").value = percent_of_deforest;
          dom.byId("mapUrl").value = MAP_IMG_URL;
          console.log(percent_of_deforest);
          var verdict;
          if(percent_of_deforest < 0.3){
            verdict = "Your tender has been accepted for further approval!";
          }
          else{
            verdict = "Sorry, your tender cannot be passed further, as it exceeds deforestation limit";
          }
          dom.byId("acceptance").value = verdict;
          var deforestation_area = INTERSECT_AREA * 0.35;
          deforestation_area =deforestation_area.toFixed(2);
          dom.byId("deforest").value = deforestation_area;
        }
        
  
    });
  </script>

</head>


<body class = "claro">

    <div class="row">
        <div class="container-fluid mt--7">
            <div class="row">
              <div class="col">
                <!-- <div class="card shadow border-0"> -->
                  <!-- <div id="map-canvas" class="map-canvas" data-lat="40.748817" data-lng="-73.985428" style="height: 600px;"></div> -->
                  <!-- <div id="viewDiv" style="height:600px;"></div> -->
                <div class="card-body px-lg-5 py-lg-5" >
                          
                  <form action="http://127.0.0.1:4500/submit-tender" method="post">
                    <div class="form-group">
                      <div class="input-group input-group-alternative mb-3">
                        
                        <input class="form-control" placeholder="Project Name" name="projectName" type="text">
                      </div>
                    </div>

                    <div class="form-group">
                          <div class="input-group input-group-alternative mb-3">
                            
                            <input class="form-control" placeholder="Tender Company" name="company" type="text">
                          </div>
                      </div>

                    <div class="form-group">
                      <div class="input-group input-group-alternative mb-3">
                        
                        <input class="form-control" placeholder="Project Name" name="projectName" type="text">
                      </div>
                    </div>

                    <input class="form-control" placeholder="Area" name="forestArea" id="FRAREA" type="hidden">
                    <input class="form-control" placeholder="Buffer Area" name="bufferArea" id="BFAREA" type="hidden">      
                    <input class="form-control" placeholder="Buffer Length" name="bufferLength" id="BFLENGTH" type="hidden">      
                    <input class="form-control" placeholder="Result Area" name="resultArea" id="RSAREA" type="hidden">
                    <input class="form-control" placeholder="acceptance" name="acceptance" id="acceptance" type="hidden">
                    <input class="form-control" placeholder="Percentage" name="Percentagecheck" id="CHECKPERCENTAGE" type="hidden"> 
                    <input class="form-control" placeholder="MapUrl" name="myurl" id="mapUrl" type="hidden">    
                    <input class="form-control" placeholder="Deforestation" name="deforest" id="deforest" type="hidden">    
                   
                    <div class="text-center">
                      <button type="submit" id="checkPercentage" class="btn btn-primary mt-4">Submit your Tender</button>
                    </div>
                  </form>
                        </div>
                </div>
              </div>
            </div>
      
    </div>
      


<div data-dojo-type="dijit/layout/BorderContainer" 
data-dojo-props="gutters:'true', design:'sidebar'" 
style="width:100%;height:100%;">

  

  <div id="map" 
      data-dojo-type="dijit/layout/ContentPane" 
      data-dojo-props="region:'center'">
  </div>

  <div id="leftPane" 
      data-dojo-type="dijit/layout/ContentPane" 
      data-dojo-props="region:'left'">
    <div class="details">Pick a tool and draw on the map. The drawn graphic will be buffered based on the specified parameters.</div>
    <button type="button" class="btn btn-primary mt-2 tool" id="line" style="height:25px; padding-bottom: 25px">Line</button>
    <button type="button" class="btn btn-primary mt-2 tool" id="polyline" style="height:25px; padding-bottom: 25px">Polyline</button>
    <button type="button" class="btn btn-primary mt-2 tool" id="freehandpolyline" style="height:25px; padding-bottom: 25px">Freehand Polyline</button>
    <br/>
    <button type="button" class="btn btn-primary mt-2 tool" id="polygon" style="height:25px; padding-bottom: 25px">Polygon</button>
    <button type="button" class="btn btn-primary mt-2 tool" id="freehandpolygon" style="height:25px; padding-bottom: 25px">Freehand Polygon</button>
    <br/><hr />
    <div><b>Buffer Parameters</b></div>
    Distance:&nbsp;<input type="text" id="distance" size="5" value="25" />
    <select class="btn btn-primary mt-2" id="unit" style="width:100px;">
      <option value="meters">Meters</option>
      <option value="feet">Feet</option>
      <option value="kilometers" selected>Kilometers</option>
      <option value="miles">Miles</option>
      <option value="nautical-miles">Nautical Miles</option>
      <option value="yards">Yards</option>
    </select><br />
    <button class="btn btn-primary mt-2" type="button" id="clearGraphics" style="height:25px; padding-bottom: 25px">Clear Graphics</button>
    <button type="button" id="check">check Test</button>
    <span id="info"></span>
    <hr/>
    <div><b>Input coordinates</b></div>
  <!-- INPUT LONG, LAT -->
      Tag Long:<input id="sel_long" type="text">  
      <br>  
       Tag Lat:<input id="sel_lat" type="text">  
      <br>  
      <button id="go">GO</button>

      <br/><hr/><br/>
      <div><b>Output Area unit: </b></div>
      <select class="btn btn-primary mt-2" id="area-unit">
      <option value="acres">acres</option>
      <option value="hectares">hectares</option>
      <option value="square-feet" >square feet</option>
      <option value="square-meters">square meters</option>
      <option value="square-yards">square-yards</option>
      <option value="square-kilometers" selected>square kilometers</option>
      <option value="square-miles">square miles</option>
    </select>
    <br/><hr/><br/>
    <div><b>Results: </b></div>
      <div><b>Total forest area: </b> <span id="forestArea"></span> </div>
      <div><b>Total buffer area: </b> <span id="bufferArea"></span> </div>
      <div><b>Total buffer length: </b> <span id="bufferLength"></span> </div>
    <div><b>Area of intersection: </b> <span id="resultArea"></span> </div>

    <br/>
    <button class="btn btn-primary mt-2" type="button" id="report_btn" style="height:25px; padding-bottom: 25px">Generate Report</button>

    <ul class="navbar-nav">
      <li class="nav-item">
        <a class="nav-link" href="/">
          <i class="ni ni-tv-2 text-primary"></i> Home
        </a>
      </li>
      <!-- <li class="nav-item">
        <a class="nav-link" href="/submit-tender">
          <i class="ni ni-planet text-blue"></i> Submit your Tender
        </a>
      </li> -->
      <li class="nav-item">
          <a class="nav-link" href="/policy">
            <i class="ni ni-single-02 text-yellow"></i> Government Policies
          </a>
        </li>

      <li class="nav-item">
        <a class="nav-link" href="/findMaps">
          <i class="ni ni-pin-3 text-orange"></i> Submit Your Tender
        </a>
      </li>
      
      <!-- <li class="nav-item">
          <a class="nav-link" href="/result">
            <i class="ni ni-single-02 text-yellow"></i> Result
          </a>
        </li> -->
      <!-- <li class="nav-item">
        <a class="nav-link" href="./examples/tables.html">
          <i class="ni ni-bullet-list-67 text-red"></i> Contact us
        </a>
      </li> -->
      <!-- <li class="nav-item">
        <a class="nav-link" href="/login">
          <i class="ni ni-key-25 text-info"></i> Login
        </a>
      </li>
      <li class="nav-item">
        <a class="nav-link" href="/register">
          <i class="ni ni-circle-08 text-pink"></i> Register
        </a>
      </li> -->
    </ul>
  </div>

</div>

</body>


</html>
